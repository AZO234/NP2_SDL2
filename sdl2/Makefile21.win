DEBUG ?= 0
SUPPORT_HAXM ?= 0
SDL_VERSION ?= 2
GIT_VERSION := "$(shell git rev-parse --short HEAD)"

ifeq ($(SDL_VERSION), 1)
SDL_CONFIG ?= sdl-config
SDL_OTHER_LIBS ?= -lSDL_ttf -lSDL_mixer
SUPPORT_ASYNC_CPU ?=
else
SDL_CONFIG ?= sdl2-config
SDL_OTHER_LIBS ?= -lSDL2_ttf -lSDL2_mixer
SUPPORT_ASYNC_CPU ?= -DSUPPORT_ASYNC_CPU
endif
SDL_CFLAGS := $(shell $(SDL_CONFIG) --cflags) -DUSE_SDL_CONFIG
SDL_LIBS := $(shell $(SDL_CONFIG) --libs)
CC=gcc

ifeq ($(SUPPORT_HAXM), 1)
TARGET_NAME := np21kai_haxm
else
TARGET_NAME := np21kai
endif

TARGET := $(TARGET_NAME)
CFLAGS += -DGIT_VERSION=\"$(GIT_VERSION)\"
CXXFLAGS += -DGIT_VERSION=\"$(GIT_VERSION)\"
fpic = -fPIC

ifeq ($(DEBUG), 1)
COMMONFLAGS += -O0 -g -DDEBUG -D_DEBUG
else
COMMONFLAGS += -O2 -DNDEBUG
endif

CORE_DIR := ..
INCFLAGS :=
SOURCES_C :=
SOURCES_CXX :=

include Makefile.common

INCFLAGS := $(SDL_CFLAGS) $(INCFLAGS)

INCFLAGS += 	-I$(NP2_PATH)/i386c \
		-I$(NP2_PATH)/i386c/ia32 \
		-I$(NP2_PATH)/i386c/ia32/instructions \
		-I$(NP2_PATH)/i386c/ia32/instructions/fpu \
		-I$(NP2_PATH)/i386c/ia32/instructions/fpu/softfloat \
		-I$(NP2_PATH)/i386c/ia32/instructions/mmx \
		-I$(NP2_PATH)/i386c/ia32/instructions/sse \
		-I$(NP2_PATH)/sdl2/win32
#		-I$(NP2_PATH)/sdl2/win32/misc 
SOURCES_C +=  	$(wildcard $(NP2_PATH)/i386c/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/*.c) \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpdummy.c \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpemul_dosbox.c \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpemul_dosbox2.c \
		$(NP2_PATH)/i386c/ia32/instructions/fpu/fpemul_softfloat.c \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/fpu/softfloat/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/mmx/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/sse/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/sse2/*.c) \
		$(wildcard $(NP2_PATH)/i386c/ia32/instructions/sse3/*.c) \
		$(NP2_PATH)/sdl2/win32/main.c

NP2DEFINE := -DNP2_SDL2 -DUSE_SDLAUDIO -DUSE_SDLMIXER -DBIOS_IO_EMULATION -DOSLANG_UTF8 -DOSLINEBREAK_LF -DSOUND_CRITICAL -DSUPPORT_16BPP -DSUPPORT_24BPP -DSUPPORT_32BPP -DSUPPORT_8BPP -DSUPPORT_BMS -DSUPPORT_CL_GD5430 -DSUPPORT_CRT15KHZ -DSUPPORT_FAST_MEMORYCHECK -DSUPPORT_FMGEN -DSUPPORT_GPIB -DSUPPORT_HOSTDRV -DSUPPORT_HRTIMER -DSUPPORT_IDEIO -DSUPPORT_KAI_IMAGES -DSUPPORT_LARGE_HDD -DSUPPORT_LGY98 -DSUPPORT_NET -DSUPPORT_NORMALDISP -DSUPPORT_NVL_IMAGES -DSUPPORT_PC9861K -DSUPPORT_PX -DSUPPORT_RESUME -DSUPPORT_RS232C_FIFO -DSUPPORT_S98 -DSUPPORT_SCSI -DSUPPORT_SMPU98 -DSUPPORT_SOFTKBD=0 -DSUPPORT_SOUND_SB16 -DSUPPORT_SWSEEKSND -DSUPPORT_SWWABRLYSND -DSUPPORT_STATSAVE=10 -DSUPPORT_TEXTCNV -DSUPPORT_UTF8 -DSUPPORT_V30EXT -DSUPPORT_V30ORIGINAL -DSUPPORT_VPCVHD -DSUPPORT_WAB -DUSE_MAME -DVAEG_FIX -DVERMOUTH_LIB $(SUPPORT_ASYNC_CPU) -DSUPPORT_NP2_THREAD -DNP2_THREAD_SDL2
NP21DEFINE := -DCPUCORE_IA32 -DIA32_PAGING_EACHSIZE -DIA32_REBOOT_ON_PANIC -DSUPPORT_CRT31KHZ -DSUPPORT_FPU_DOSBOX -DSUPPORT_FPU_DOSBOX2 -DSUPPORT_FPU_SOFTFLOAT -DSUPPORT_GAMEPORT -DSUPPORT_MEMDBG32 -DSUPPORT_LARGE_MEMORY -DSUPPORT_PC9801_119 -DSUPPORT_PC9821 -DSUPPORT_PCI -DSUPPORT_PEGC -DSUPPORT_SOUND_SB16 -DSUPPORT_VGA_MODEX -DUSE_3DNOW -DUSE_FASTPAGING -DUSE_FPU -DUSE_MMX -DUSE_SSE -DUSE_SSE2 -DUSE_SSE3 -DUSE_TSC -DUSE_VME

OBJECTS  = $(SOURCES_CXX:.cpp=.o) $(SOURCES_C:.c=.o)
CXXFLAGS += $(fpic) $(INCFLAGS) $(COMMONFLAGS) $(NP2DEFINE) $(NP21DEFINE)
CFLAGS   += $(fpic) $(INCFLAGS) $(COMMONFLAGS) $(NP2DEFINE) $(NP21DEFINE)
LDFLAGS  += $(fpic) -lm $(SDL_LIBS) $(SDL_OTHER_LIBS) -lwinmm

ifeq ($(SUPPORT_HAXM), 1)
INCFLAGS += -I$(NP2_PATH)/i386hax
SOURCES_C += $(wildcard $(NP2_PATH)/i386hax/*.c)
CXXFLAGS += -DSUPPORT_IA32_HAXM -DUSE_CUSTOM_HOOKINST
CFLAGS   += -DSUPPORT_IA32_HAXM -DUSE_CUSTOM_HOOKINST
endif

all: $(TARGET)
$(TARGET): $(OBJECTS)
ifeq ($(STATIC_LINKING), 1)
	$(AR) rcs $@ $(OBJECTS)
else
	$(CXX) -o $@ $(OBJECTS) $(LDFLAGS)
endif

%.o: %.c
	$(CC) $(CFLAGS) -c $^ -o $@

%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $^ -o $@


clean:
	rm -f $(OBJECTS) $(TARGET)
	rm -f compile_commands.json
	rm -f cppcheck.xml

cppcheck: compile_commands.json
	cppcheck --project=compile_commands.json --xml 2> cppcheck.xml

compile_commands.json:
	bear make -f Makefile21.win


install:
	strip $(TARGET)
	cp $(TARGET) /usr/local/bin/


uninstall:
	rm /usr/local/bin/$(TARGET)

